name: Build
on: [push, pull_request]

jobs:
  windows-msys:
    name: ${{ matrix.btype }} Windows-GCC ${{ matrix.arch }}
    runs-on: windows-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [x86, x86_64]
        cc: [gcc]
        btype: [Release, Debug]
        include:
          - arch: x86
            msystem: MINGW32
            prefix: mingw-w64-i686

          - arch: x86_64
            msystem: MINGW64
            prefix: mingw-w64-x86_64

          - btype: Release
            rule: install

          - btype: Debug
            rule: debug install

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - uses: msys2/setup-msys2@v2
      with:
        install: ${{ matrix.prefix }}-binutils ${{ matrix.prefix }}-make ${{ matrix.prefix }}-${{ matrix.cc }}
        msystem: ${{ matrix.msystem }}
        path-type: minimal
        release: false
        update: false

    - uses: actions/checkout@v3.1.0
      with:
        submodules: recursive

    - name: Build
      if: ${{ github.event_name != 'release' || matrix.btype != 'Debug' }} # skip Debug configuration in Release build
      run: |
        ./build.bat
        make release ARCH=x86
        make release PLATFORM=linux ARCH=x86
        make debug ARCH=x86
        make debug PLATFORM=linux ARCH=x86
      env:
        ARCHIVE: 1
    - uses: actions/upload-artifact@v3.1.1
      if: matrix.cc == 'gcc' && matrix.btype == 'release'
      with:
        name: windows-mingw-${{ matrix.arch }}
        path: build/*
        if-no-files-found: error
        retention-days: 5

  build-linux:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2
    - name: Build linux QVM, .dll and .so
      run: |
        sudo apt-get update # && sudo apt-get upgrade -y
        make release ARCH=x86_64
        make release BUILD_DLL=1 ARCH=x86_64
        make debug ARCH=x86_64
        make debug BUILD_DLL=1 ARCH=x86_64
        sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install wine32-development
        wine cmd /c build.bat
      env:
        ARCHIVE: 1

    - name: Store QVM artifacts
      uses: actions/upload-artifact@v2
      with:
        name: QVMs
        path: |
          *.pk3
        if-no-files-found: error
        retention-days: 5
    
    - name: Store x86_64 .dll and x86_64 .so artifacts
      uses: actions/upload-artifact@v2
      with:
        name: x86_64 .dll and x86_64 .so files
        path: |
          build/*
        if-no-files-found: error
        retention-days: 5

    - name: Publish a release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        files: |
          *.pk3
          build/*.zip