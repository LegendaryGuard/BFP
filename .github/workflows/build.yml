name: Build
on: [push]

jobs:
  
  build-windows:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build windows QVM
      run: |
        ./build.bat
      env:
        ARCHIVE: 1

  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Build linux QVM, .dll and .so
      run: |
        sudo apt-get update # && sudo apt-get upgrade -y
        sudo apt-get install -y build-essential
        sudo apt-get install -y libc6-dev-i386
        sudo apt-get install -y g++-multilib
        make release ARCH=x86
        make release BUILD_DLL=1 ARCH=x86
        make debug ARCH=x86
        make debug BUILD_DLL=1 ARCH=x86
        make release ARCH=x86_64
        make release BUILD_DLL=1 ARCH=x86_64
        make debug ARCH=x86_64
        make debug BUILD_DLL=1 ARCH=x86_64
        sudo dpkg --add-architecture i386 && sudo apt-get update && sudo apt-get install -y wine32-development
        wine cmd /c build.bat
      env:
        ARCHIVE: 1

    - name: Store QVM artifacts
      uses: actions/upload-artifact@v3
      with:
        name: QVMs
        path: |
          *.pk3
        if-no-files-found: error
        retention-days: 5
    
    - name: Store .dll and .so artifacts
      uses: actions/upload-artifact@v3
      with:
        name: .dll and .so files
        path: |
          build/*
        if-no-files-found: error
        retention-days: 5

    - name: Publish a release
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        files: |
          *.pk3
          build/*.zip